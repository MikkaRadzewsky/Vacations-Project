{"ast":null,"code":"var _jsxFileName = \"/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 1.0/Frontend/src/Components/HomeArea/BestSeller/BestSeller.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./BestSeller.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BestSeller() {\n  _s();\n  // Long syntax - without Destructuring Assignment\n  const nameArr = useState(\"\"); // \"\" is the initial value\n  const name = nameArr[0]; // The value we need.\n  const setName = nameArr[1]; // A function for changing the value and for rerendering the component.\n\n  // Short syntax - using Destructuring Assignment:\n  const [totalItems, setTotalItems] = useState(0);\n  function showBestSeller() {\n    setName(\"Exotic Liquids\"); // a. change the value, b. rerender the component\n    setTotalItems(17); // a. change the value, b. rerender the component\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BestSeller Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showBestSeller,\n      children: \"Best Seller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" Name: \", name, \" | \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" Total Items: \", totalItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(BestSeller, \"2z8WibRCBtsNNWxvl/N9kBXDcvc=\");\n_c = BestSeller;\nexport default BestSeller;\nvar _c;\n$RefreshReg$(_c, \"BestSeller\");","map":{"version":3,"names":["useState","BestSeller","nameArr","name","setName","totalItems","setTotalItems","showBestSeller"],"sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 1.0/Frontend/src/Components/HomeArea/BestSeller/BestSeller.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./BestSeller.css\";\n\nfunction BestSeller(): JSX.Element {\n\n    // Long syntax - without Destructuring Assignment\n    const nameArr = useState(\"\"); // \"\" is the initial value\n    const name = nameArr[0]; // The value we need.\n    const setName = nameArr[1]; // A function for changing the value and for rerendering the component.\n\n    // Short syntax - using Destructuring Assignment:\n    const [totalItems, setTotalItems] = useState(0);\n\n    function showBestSeller(): void {\n        setName(\"Exotic Liquids\"); // a. change the value, b. rerender the component\n        setTotalItems(17); // a. change the value, b. rerender the component\n    }\n\n    return (\n        <div className=\"BestSeller Box\">\n\n\t\t\t<button onClick={showBestSeller}>Best Seller</button>\n\n            <span> Name: {name} | </span>\n            <span> Total Items: {totalItems}</span>\n\n        </div>\n    );\n}\n\nexport default BestSeller;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AAAC;AAE1B,SAASC,UAAU,GAAgB;EAAA;EAE/B;EACA,MAAMC,OAAO,GAAGF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9B,MAAMG,IAAI,GAAGD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,MAAME,OAAO,GAAGF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACA,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASO,cAAc,GAAS;IAC5BH,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3BE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;EACvB;;EAEA,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAEpC;MAAQ,OAAO,EAAEC,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAE5C;MAAA,sBAAcJ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAC7B;MAAA,6BAAqBE,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAErC;AAEd;AAAC,GAzBQJ,UAAU;AAAA,KAAVA,UAAU;AA2BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}