{"ast":null,"code":"import axios from \"axios\";\nimport { AuthActionType, authStore } from \"../Redux/AuthState\";\nimport appConfig from \"../Utils/Config\";\nclass AuthService {\n  // Registering a new user: \n  async register(user) {\n    // Send to backend the new user: \n    const response = await axios.post(appConfig.registerUrl, user);\n\n    // Backend returns token: \n    const token = response.data;\n\n    // Send token to Redux: \n    authStore.dispatch({\n      type: AuthActionType.Register,\n      payload: token\n    });\n  }\n\n  // Login existing user: \n  async login(credentials) {\n    // Send to backend the credentials: \n    const response = await axios.post(appConfig.loginUrl, credentials);\n\n    // Backend returns token: \n    const token = response.data;\n\n    // Send token to Redux:\n    authStore.dispatch({\n      type: AuthActionType.Login,\n      payload: token\n    });\n  }\n\n  // Logout existing user:\n  logout() {\n    authStore.dispatch({\n      type: AuthActionType.Logout\n    });\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","AuthActionType","authStore","appConfig","AuthService","register","user","response","post","registerUrl","token","data","dispatch","type","Register","payload","login","credentials","loginUrl","Login","logout","Logout","authService"],"sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/Teach's Docs/2022-11-08 - REST API using MySQL, Full Stack System, SCSS/02 - Northwind Full Stack System/Frontend/src/Services/AuthService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport CredentialsModel from \"../Models/CredentialsModel\";\r\nimport UserModel from \"../Models/UserModel\";\r\nimport { AuthActionType, authStore } from \"../Redux/AuthState\";\r\nimport appConfig from \"../Utils/Config\";\r\n\r\nclass AuthService {\r\n\r\n    // Registering a new user: \r\n    public async register(user: UserModel): Promise<void> {\r\n\r\n        // Send to backend the new user: \r\n        const response = await axios.post<string>(appConfig.registerUrl, user);\r\n\r\n        // Backend returns token: \r\n        const token = response.data;\r\n\r\n        // Send token to Redux: \r\n        authStore.dispatch({ type: AuthActionType.Register, payload: token });\r\n    }\r\n\r\n    // Login existing user: \r\n    public async login(credentials: CredentialsModel): Promise<void> {\r\n\r\n        // Send to backend the credentials: \r\n        const response = await axios.post<string>(appConfig.loginUrl, credentials);\r\n\r\n        // Backend returns token: \r\n        const token = response.data;\r\n\r\n        // Send token to Redux:\r\n        authStore.dispatch({ type: AuthActionType.Login, payload: token });\r\n    }\r\n\r\n    // Logout existing user:\r\n    public logout(): void {\r\n        authStore.dispatch({ type: AuthActionType.Logout });\r\n    }\r\n\r\n}\r\n\r\nconst authService = new AuthService();\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,cAAc,EAAEC,SAAS,QAAQ,oBAAoB;AAC9D,OAAOC,SAAS,MAAM,iBAAiB;AAEvC,MAAMC,WAAW,CAAC;EAEd;EACA,MAAaC,QAAQ,CAACC,IAAe,EAAiB;IAElD;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAASL,SAAS,CAACM,WAAW,EAAEH,IAAI,CAAC;;IAEtE;IACA,MAAMI,KAAK,GAAGH,QAAQ,CAACI,IAAI;;IAE3B;IACAT,SAAS,CAACU,QAAQ,CAAC;MAAEC,IAAI,EAAEZ,cAAc,CAACa,QAAQ;MAAEC,OAAO,EAAEL;IAAM,CAAC,CAAC;EACzE;;EAEA;EACA,MAAaM,KAAK,CAACC,WAA6B,EAAiB;IAE7D;IACA,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAASL,SAAS,CAACe,QAAQ,EAAED,WAAW,CAAC;;IAE1E;IACA,MAAMP,KAAK,GAAGH,QAAQ,CAACI,IAAI;;IAE3B;IACAT,SAAS,CAACU,QAAQ,CAAC;MAAEC,IAAI,EAAEZ,cAAc,CAACkB,KAAK;MAAEJ,OAAO,EAAEL;IAAM,CAAC,CAAC;EACtE;;EAEA;EACOU,MAAM,GAAS;IAClBlB,SAAS,CAACU,QAAQ,CAAC;MAAEC,IAAI,EAAEZ,cAAc,CAACoB;IAAO,CAAC,CAAC;EACvD;AAEJ;AAEA,MAAMC,WAAW,GAAG,IAAIlB,WAAW,EAAE;AAErC,eAAekB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}