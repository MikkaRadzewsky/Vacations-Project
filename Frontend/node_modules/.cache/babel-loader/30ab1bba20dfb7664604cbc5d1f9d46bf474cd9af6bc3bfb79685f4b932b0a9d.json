{"ast":null,"code":"import { Notyf } from \"notyf\"; // npm i notyf\n\nclass NotifyService {\n  constructor() {\n    this.notify = new Notyf({\n      duration: 3000,\n      // display duration\n      position: {\n        x: \"center\",\n        y: \"top\"\n      },\n      // message location\n      dismissible: true // can user click on X\n    });\n  }\n\n  success(message) {\n    this.notify.success(message);\n  }\n  error(err) {\n    const message = this.extractErrorMessage(err);\n    this.notify.error(message);\n  }\n  extractErrorMessage(err) {\n    var _err$response, _err$response2;\n    // Front: throw \"some error...\";\n    if (typeof err === \"string\") return err;\n\n    // Back: throws string (500 - server crash / 401 - unauthorized / 404...)\n    if (typeof ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) === \"string\") return err.response.data;\n\n    // Back throws string[] (400 - validation)\n    if (Array.isArray((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data)) return err.response.data[0];\n\n    // Front: throw new Error(\"some error...\");\n    if (typeof err.message === \"string\") return err.message;\n\n    // Other: \n    return \"Some error occurred, please try again\";\n  }\n}\nconst notifyService = new NotifyService();\nexport default notifyService;","map":{"version":3,"names":["Notyf","NotifyService","notify","duration","position","x","y","dismissible","success","message","error","err","extractErrorMessage","response","data","Array","isArray","notifyService"],"sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 5.0/Frontend/src/Services/NotifyService.ts"],"sourcesContent":["import { Notyf } from \"notyf\"; // npm i notyf\r\n\r\nclass NotifyService {\r\n\r\n    private notify = new Notyf({\r\n        duration: 3000, // display duration\r\n        position: { x: \"center\", y: \"top\" }, // message location\r\n        dismissible: true // can user click on X\r\n    });\r\n\r\n    public success(message: string): void {\r\n        this.notify.success(message);\r\n    }\r\n\r\n    public error(err: any): void {\r\n        const message = this.extractErrorMessage(err);\r\n        this.notify.error(message);\r\n    }\r\n\r\n    private extractErrorMessage(err: any): string {\r\n\r\n        // Front: throw \"some error...\";\r\n        if (typeof err === \"string\") return err;\r\n\r\n        // Back: throws string (500 - server crash / 401 - unauthorized / 404...)\r\n        if (typeof err.response?.data === \"string\") return err.response.data;\r\n\r\n        // Back throws string[] (400 - validation)\r\n        if (Array.isArray(err.response?.data)) return err.response.data[0];\r\n\r\n        // Front: throw new Error(\"some error...\");\r\n        if (typeof err.message === \"string\") return err.message;\r\n\r\n        // Other: \r\n        return \"Some error occurred, please try again\";\r\n    }\r\n\r\n}\r\n\r\nconst notifyService = new NotifyService();\r\n\r\nexport default notifyService;\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO,CAAC,CAAC;;AAE/B,MAAMC,aAAa,CAAC;EAAA;IAAA,KAERC,MAAM,GAAG,IAAIF,KAAK,CAAC;MACvBG,QAAQ,EAAE,IAAI;MAAE;MAChBC,QAAQ,EAAE;QAAEC,CAAC,EAAE,QAAQ;QAAEC,CAAC,EAAE;MAAM,CAAC;MAAE;MACrCC,WAAW,EAAE,IAAI,CAAC;IACtB,CAAC,CAAC;EAAA;;EAEKC,OAAO,CAACC,OAAe,EAAQ;IAClC,IAAI,CAACP,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC;EAChC;EAEOC,KAAK,CAACC,GAAQ,EAAQ;IACzB,MAAMF,OAAO,GAAG,IAAI,CAACG,mBAAmB,CAACD,GAAG,CAAC;IAC7C,IAAI,CAACT,MAAM,CAACQ,KAAK,CAACD,OAAO,CAAC;EAC9B;EAEQG,mBAAmB,CAACD,GAAQ,EAAU;IAAA;IAE1C;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;;IAEvC;IACA,IAAI,yBAAOA,GAAG,CAACE,QAAQ,kDAAZ,cAAcC,IAAI,MAAK,QAAQ,EAAE,OAAOH,GAAG,CAACE,QAAQ,CAACC,IAAI;;IAEpE;IACA,IAAIC,KAAK,CAACC,OAAO,mBAACL,GAAG,CAACE,QAAQ,mDAAZ,eAAcC,IAAI,CAAC,EAAE,OAAOH,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;;IAElE;IACA,IAAI,OAAOH,GAAG,CAACF,OAAO,KAAK,QAAQ,EAAE,OAAOE,GAAG,CAACF,OAAO;;IAEvD;IACA,OAAO,uCAAuC;EAClD;AAEJ;AAEA,MAAMQ,aAAa,GAAG,IAAIhB,aAAa,EAAE;AAEzC,eAAegB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}