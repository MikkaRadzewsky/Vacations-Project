{"ast":null,"code":"var _jsxFileName = \"/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 1.0/Frontend/src/Components/HomeArea/ClockEx/ClockEx.tsx\";\nimport { Component } from \"react\";\nimport \"./ClockEx.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// class ClockEx extends Component { // No Props, No State\n// class ClockEx extends Component<ClockExProps> { // Only Props, No State\n// class ClockEx extends Component<{}, ClockExState> { // No Props, Only State\nclass ClockEx extends Component {\n  // Also Props and State\n\n  // For ending the time.\n\n  constructor(props) {\n    super(props);\n\n    // Init state is always in the ctor:\n    this.timerId = void 0;\n    this.showTime2 = () => {\n      alert(this.getTime());\n    };\n    this.state = {\n      time: \"\"\n    };\n  }\n\n  // Lifecycle Hooks:\n\n  // useEffect performing once - perform onc when component is ready for use\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // Update state: \n      this.setState({\n        time: this.getTime()\n      });\n    }, 1000);\n  }\n  getTime() {\n    const now = new Date();\n    const time = now.toLocaleTimeString('en-US', {\n      hour12: this.props.format === \"12h\"\n    });\n    return time;\n  }\n\n  // // Perform whenever props or state changes:\n  // public componentDidUpdate(prevProps: Readonly<ClockExProps>, prevState: Readonly<ClockExState>, snapshot?: any): void {\n  // }\n\n  showTime1() {\n    alert(this.getTime());\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ClockEx Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", this.state.time, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showTime1.bind(this),\n        children: \" \\uD83D\\uDD51 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showTime2,\n        children: \" \\uD83D\\uDD51 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Perform before component destroyed.\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n}\nexport default ClockEx;","map":{"version":3,"names":["Component","ClockEx","constructor","props","timerId","showTime2","alert","getTime","state","time","componentDidMount","window","setInterval","setState","now","Date","toLocaleTimeString","hour12","format","showTime1","render","bind","componentWillUnmount","clearInterval"],"sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 1.0/Frontend/src/Components/HomeArea/ClockEx/ClockEx.tsx"],"sourcesContent":["import { Component } from \"react\";\nimport \"./ClockEx.css\";\n\ninterface ClockExProps {\n    format: string; // 24h / 12h\n}\n\ninterface ClockExState {\n    time: string;\n}\n\n// class ClockEx extends Component { // No Props, No State\n// class ClockEx extends Component<ClockExProps> { // Only Props, No State\n// class ClockEx extends Component<{}, ClockExState> { // No Props, Only State\nclass ClockEx extends Component<ClockExProps, ClockExState> { // Also Props and State\n\n    private timerId: number; // For ending the time.\n\n    public constructor(props: ClockExProps) {\n        super(props);\n\n        // Init state is always in the ctor:\n        this.state = {\n            time: \"\"\n        };\n    }\n\n    // Lifecycle Hooks:\n\n    // useEffect performing once - perform onc when component is ready for use\n    public componentDidMount(): void {\n        this.timerId = window.setInterval(() => {\n\n            // Update state: \n            this.setState({ time: this.getTime() });\n\n        }, 1000);\n    }\n\n    private getTime(): string {\n        const now = new Date();\n        const time = now.toLocaleTimeString('en-US', { hour12: this.props.format === \"12h\" });\n        return time;\n    }\n\n    // // Perform whenever props or state changes:\n    // public componentDidUpdate(prevProps: Readonly<ClockExProps>, prevState: Readonly<ClockExState>, snapshot?: any): void {\n    // }\n\n    private showTime1(): void {\n        alert(this.getTime());\n    }\n\n    private showTime2 = () => {\n        alert(this.getTime());\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"ClockEx Box\">\n                <span> {this.state.time} </span>\n                <button onClick={this.showTime1.bind(this)}> ðŸ•‘ </button>\n                <button onClick={this.showTime2}> ðŸ•‘ </button>\n            </div>\n        );\n    }\n\n    // Perform before component destroyed.\n    public componentWillUnmount(): void {\n        window.clearInterval(this.timerId);\n    }\n}\n\nexport default ClockEx;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,eAAe;AAAC;AAUvB;AACA;AACA;AACA,MAAMC,OAAO,SAASD,SAAS,CAA6B;EAAE;;EAEjC;;EAElBE,WAAW,CAACC,KAAmB,EAAE;IACpC,KAAK,CAACA,KAAK,CAAC;;IAEZ;IAAA,KALIC,OAAO;IAAA,KAqCPC,SAAS,GAAG,MAAM;MACtBC,KAAK,CAAC,IAAI,CAACC,OAAO,EAAE,CAAC;IACzB,CAAC;IAjCG,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE;IACV,CAAC;EACL;;EAEA;;EAEA;EACOC,iBAAiB,GAAS;IAC7B,IAAI,CAACN,OAAO,GAAGO,MAAM,CAACC,WAAW,CAAC,MAAM;MAEpC;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEJ,IAAI,EAAE,IAAI,CAACF,OAAO;MAAG,CAAC,CAAC;IAE3C,CAAC,EAAE,IAAI,CAAC;EACZ;EAEQA,OAAO,GAAW;IACtB,MAAMO,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,MAAMN,IAAI,GAAGK,GAAG,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAAEC,MAAM,EAAE,IAAI,CAACd,KAAK,CAACe,MAAM,KAAK;IAAM,CAAC,CAAC;IACrF,OAAOT,IAAI;EACf;;EAEA;EACA;EACA;;EAEQU,SAAS,GAAS;IACtBb,KAAK,CAAC,IAAI,CAACC,OAAO,EAAE,CAAC;EACzB;EAMOa,MAAM,GAAgB;IACzB,oBACI;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAA,gBAAQ,IAAI,CAACZ,KAAK,CAACC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eAChC;QAAQ,OAAO,EAAE,IAAI,CAACU,SAAS,CAACE,IAAI,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACzD;QAAQ,OAAO,EAAE,IAAI,CAAChB,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAEd;;EAEA;EACOiB,oBAAoB,GAAS;IAChCX,MAAM,CAACY,aAAa,CAAC,IAAI,CAACnB,OAAO,CAAC;EACtC;AACJ;AAEA,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}