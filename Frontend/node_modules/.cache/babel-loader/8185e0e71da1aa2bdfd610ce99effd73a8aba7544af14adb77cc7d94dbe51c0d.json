{"ast":null,"code":"import axios from \"axios\";\nimport fs from \"fs\";\nimport { VacationsActionType, vacationsStore } from \"../Redux/VacationsState\";\nimport appConfig from \"../Utils/Config\";\nimport { v4 as uuid } from \"uuid\";\nclass VacationsService {\n  // Get all vacations:\n  async getAllVacations() {\n    let vacations = vacationsStore.getState().vacations;\n    if (vacations.length === 0) {\n      const response = await axios.get(appConfig.vacationsUrl); // AJAX\n      vacations = response.data;\n      vacationsStore.dispatch({\n        type: VacationsActionType.FetchVacations,\n        payload: vacations\n      });\n    }\n    return vacations;\n  }\n\n  // Get one product:\n  async getOneVacation(id) {\n    let vacations = vacationsStore.getState().vacations;\n    let vacation = vacations.find(v => v.vacationId === id);\n    if (!vacation) {\n      const response = await axios.get(appConfig.vacationsUrl + id);\n      vacation = response.data;\n    }\n    return vacation;\n  }\n\n  // REST API Methods:\n  // GET      Get data from server\n  // POST     Add new data to server\n  // PUT      Update full data in server - sending all properties\n  // PATCH    Update partial data in server - sending some properties\n  // DELETE   Delete data in server\n\n  // Add vacation: \n  async addVacation(vacation) {\n    if (vacation.image) {\n      const extension = vacation.image.name.substring(vacation.image.name.lastIndexOf(\".\"));\n      vacation.imageName = uuid() + extension;\n      await vacation.image.mv(\"./src/1-assets/images/\" + vacation.imageName);\n      delete vacation.image;\n    }\n    const myFormData = new FormData(); // Can contain strings and / or files.\n    myFormData.append(\"destination\", vacation.destination.to);\n    myFormData.append(\"description\", vacation.description);\n    myFormData.append(\"startDate\", vacation.startDate.toLocaleDateString());\n    myFormData.append(\"endDate\", vacation.endDate.toLocaleDateString());\n    myFormData.append(\"price\", vacation.price.toString());\n    myFormData.append(\"imageName\", vacation.imageName);\n\n    // Sending object with file (the image):\n    const response = await axios.post(appConfig.vacationsUrl, myFormData); // Sending object without files.\n\n    // Extract the added vacation: \n    const addedVacation = response.data;\n\n    // Add the added vacation to the global state:\n    vacationsStore.dispatch({\n      type: VacationsActionType.AddVacation,\n      payload: addedVacation\n    });\n  }\n\n  // Update Vacation: \n  async updateVacation(vacation) {\n    if (vacation.image) {\n      // If we have a previous image:\n      if (fs.existsSync(\"./src/1-assets/images/\" + vacation.vacationId)) {\n        // Delete it:\n        fs.unlinkSync(\"./src/1-assets/images/\" + vacation.vacationId);\n      }\n      const extension = vacation.image.name.substring(vacation.image.name.lastIndexOf(\".\"));\n      vacation.imageName = uuid() + extension;\n      await vacation.image.mv(\"./src/1-assets/images/\" + vacation.imageName);\n      delete vacation.image;\n    }\n    const myFormData = new FormData(); // Can contain strings and / or files.\n    myFormData.append(\"destination\", vacation.destination);\n    myFormData.append(\"description\", vacation.description);\n    myFormData.append(\"startDate\", vacation.startDate.toLocaleDateString());\n    myFormData.append(\"endDate\", vacation.endDate.toLocaleDateString());\n    myFormData.append(\"price\", vacation.price.toString());\n    myFormData.append(\"imageName\", vacation.imageName);\n    const response = await axios.put(appConfig.vacationsUrl + vacation.vacationId, myFormData); // Sending object without files.\n    const updatedVacation = response.data;\n    vacationsStore.dispatch({\n      type: VacationsActionType.UpdateVacation,\n      payload: updatedVacation\n    });\n  }\n\n  // Delete Vacation: \n  async deleteVacation(id) {\n    let vacations = vacationsStore.getState().vacations;\n    let vacation = vacations.find(v => v.vacationId === id);\n    if (fs.existsSync(\"./src/1-assets/images/\" + vacation.imageName)) {\n      fs.unlinkSync(\"./src/1-assets/images/\" + vacation.imageName);\n    }\n    await axios.delete(appConfig.vacationsUrl + id);\n    vacationsStore.dispatch({\n      type: VacationsActionType.DeleteVacation,\n      payload: id\n    });\n  }\n}\nconst vacationsService = new VacationsService();\nexport default vacationsService;","map":{"version":3,"names":["axios","fs","VacationsActionType","vacationsStore","appConfig","v4","uuid","VacationsService","getAllVacations","vacations","getState","length","response","get","vacationsUrl","data","dispatch","type","FetchVacations","payload","getOneVacation","id","vacation","find","v","vacationId","addVacation","image","extension","name","substring","lastIndexOf","imageName","mv","myFormData","FormData","append","destination","to","description","startDate","toLocaleDateString","endDate","price","toString","post","addedVacation","AddVacation","updateVacation","existsSync","unlinkSync","put","updatedVacation","UpdateVacation","deleteVacation","delete","DeleteVacation","vacationsService"],"sources":["/Users/raniradzewsky/Library/Mobile Documents/com~apple~CloudDocs/Documents/school/John Bryce/John Bryce Projects/Project 3/Vacations Project 1.0/Frontend/src/Services/VacationsService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport fs from \"fs\";\r\nimport VacationModel from \"../Models/VacationModel\";\r\nimport { authStore } from \"../Redux/AuthState\";\r\nimport { VacationsActionType, vacationsStore } from \"../Redux/VacationsState\";\r\nimport appConfig from \"../Utils/Config\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass VacationsService {\r\n\r\n    // Get all vacations:\r\n    public async getAllVacations(): Promise<VacationModel[]> {\r\n\r\n        let vacations = vacationsStore.getState().vacations;\r\n\r\n        if (vacations.length === 0) {\r\n\r\n            const response = await axios.get<VacationModel[]>(appConfig.vacationsUrl); // AJAX\r\n            vacations = response.data;\r\n            vacationsStore.dispatch({ type: VacationsActionType.FetchVacations, payload: vacations });\r\n        }\r\n\r\n        return vacations;\r\n    }\r\n\r\n    // Get one product:\r\n    public async getOneVacation(id: number): Promise<VacationModel> {\r\n\r\n        let vacations = vacationsStore.getState().vacations;\r\n        let vacation = vacations.find(v => v.vacationId === id);\r\n\r\n        if (!vacation) {\r\n\r\n            const response = await axios.get<VacationModel>(appConfig.vacationsUrl + id); \r\n            vacation = response.data;\r\n        }\r\n\r\n        return vacation;\r\n    }\r\n\r\n    // REST API Methods:\r\n    // GET      Get data from server\r\n    // POST     Add new data to server\r\n    // PUT      Update full data in server - sending all properties\r\n    // PATCH    Update partial data in server - sending some properties\r\n    // DELETE   Delete data in server\r\n\r\n    // Add vacation: \r\n    public async addVacation(vacation: VacationModel): Promise<void> { \r\n        \r\n    if (vacation.image) {\r\n        const extension = vacation.image.name.substring(vacation.image.name.lastIndexOf(\".\"))\r\n        vacation.imageName = uuid() + extension;\r\n        await vacation.image.mv(\"./src/1-assets/images/\" + vacation.imageName);\r\n        delete vacation.image;\r\n    }\r\n\r\n        const myFormData = new FormData(); // Can contain strings and / or files.\r\n        myFormData.append(\"destination\", vacation.destination.to);\r\n        myFormData.append(\"description\", vacation.description);\r\n        myFormData.append(\"startDate\", vacation.startDate.toLocaleDateString());\r\n        myFormData.append(\"endDate\", vacation.endDate.toLocaleDateString());\r\n        myFormData.append(\"price\", vacation.price.toString());\r\n        myFormData.append(\"imageName\", vacation.imageName);\r\n\r\n        // Sending object with file (the image):\r\n        const response = await axios.post<VacationModel>(appConfig.vacationsUrl, myFormData); // Sending object without files.\r\n\r\n        // Extract the added vacation: \r\n        const addedVacation = response.data;\r\n\r\n        // Add the added vacation to the global state:\r\n        vacationsStore.dispatch({ type: VacationsActionType.AddVacation, payload: addedVacation });\r\n    }\r\n\r\n    // Update Vacation: \r\n    public async updateVacation(vacation: VacationModel): Promise<void> {\r\n\r\n        if (vacation.image) {\r\n\r\n            // If we have a previous image:\r\n            if (fs.existsSync(\"./src/1-assets/images/\" + vacation.vacationId)) {\r\n    \r\n                // Delete it:\r\n                fs.unlinkSync(\"./src/1-assets/images/\" + vacation.vacationId);\r\n            }\r\n    \r\n            const extension = vacation.image.name.substring(vacation.image.name.lastIndexOf(\".\"))\r\n            vacation.imageName = uuid() + extension;\r\n            await vacation.image.mv(\"./src/1-assets/images/\" + vacation.imageName);\r\n            delete vacation.image;\r\n        }\r\n    \r\n            const myFormData = new FormData(); // Can contain strings and / or files.\r\n            myFormData.append(\"destination\", vacation.destination);\r\n            myFormData.append(\"description\", vacation.description);\r\n            myFormData.append(\"startDate\", vacation.startDate.toLocaleDateString());\r\n            myFormData.append(\"endDate\", vacation.endDate.toLocaleDateString());\r\n            myFormData.append(\"price\", vacation.price.toString());\r\n            myFormData.append(\"imageName\", vacation.imageName);\r\n    \r\n\r\n        const response = await axios.put<VacationModel>(appConfig.vacationsUrl + vacation.vacationId, myFormData); // Sending object without files.\r\n        const updatedVacation = response.data;\r\n        vacationsStore.dispatch({ type: VacationsActionType.UpdateVacation, payload: updatedVacation });\r\n    }\r\n\r\n    // Delete Vacation: \r\n    public async deleteVacation(id: number): Promise<void> {\r\n\r\n        let vacations = vacationsStore.getState().vacations;\r\n        let vacation = vacations.find(v => v.vacationId === id);\r\n\r\n        if (fs.existsSync(\"./src/1-assets/images/\" + vacation.imageName)) {\r\n            fs.unlinkSync(\"./src/1-assets/images/\" + vacation.imageName);\r\n        }\r\n\r\n        await axios.delete<void>(appConfig.vacationsUrl + id);\r\n\r\n        vacationsStore.dispatch({ type: VacationsActionType.DeleteVacation, payload: id });\r\n\r\n    }\r\n\r\n}\r\n\r\nconst vacationsService = new VacationsService();\r\n\r\nexport default vacationsService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}